<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/" rel="alternate" type="text/html" /><updated>2024-06-24T21:47:25+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/feed.xml</id><title type="html">GSoC 2024 VisualCircuit Block Library - JdeRobot</title><author><name>Pankaj Keshav Borade</name></author><entry><title type="html">Coding Period Week 2: June 04 ~ June 10</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week2/" rel="alternate" type="text/html" title="Coding Period Week 2: June 04 ~ June 10" /><published>2024-06-10T00:00:00+05:30</published><updated>2024-06-10T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/code-w2</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week2/"><![CDATA[<p>Welcome to the second week of Coding Week progress. In the Monday meeting, we discussed the minimum tasks required for the midterm evaluation, reviewed the previous tasks, and assigned tasks for the next week. One of the issues in VisualCircuit is that it doesn’t generate internal scripts for nested blocks. This issue prevents the creation of complex robotics applications. To address this, I will be modifying the block composition this week. Additionally, I created a basic frontend test and installation process within GitHub Actions. This week, I will work on the first global test with GitHub Actions.</p>

<h2 id="goals">Goals</h2>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Create first global test workflow [In Progress]</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Solve the issue of nested block [In Progress]</li>
</ul>

<h2 id="accomplishment-and-challenges">Accomplishment and Challenges</h2>

<ul>
  <li>
    <h4 id="learning-tools-for-automation---selenium">Learning tools for Automation - Selenium</h4>
    <p>To create a global test, I needed a tool that could automatically click respective options in the VisualCircuit application. I explored several technologies such as Puppeteer, Playwright, and Selenium. I chose Selenium as it is widely used for automation. I learned how Selenium works and how to use it.</p>
  </li>
  <li>
    <h4 id="integreation-of-selenium-with-github-action">Integreation of Selenium with Github Action</h4>
    <p>From my research, I observed that there are two ways to use Selenium with GitHub Actions: one involves the standard installation of Chrome and ChromeDriver, and the other uses the selenium/standalone-chrome Docker image. I chose the second method as it includes the latest Chrome and ChromeDriver, eliminating the need for a separate ChromeDriver. Additionally, it contains all the functionalities of the Chrome browser. Initially, the browser was not displaying correctly on the Selenium Grid, only showing the logo. To view the live action of the process, I opted for noVNC.</p>
  </li>
  <li>
    <h4 id="automating-clicking-file-and-open-buttons-in-the-menubar">Automating clicking File and Open buttons in the Menubar</h4>
    <p>After successfully running selenium/standalone-chrome on my local machine, I automated the process of clicking the menubar buttons. I needed the XPATH to locate and perform the respective actions. I found the XPATH for the File and Open buttons from the Developer Console. Below is a GIF showing the automation process of opening the browser, launching VC, and clicking the respective buttons.</p>
  </li>
</ul>

<p>Automating clicking File and Open buttons in the Menubar:</p>

<p><img src="../assets/images/five.gif" alt="" /></p>

<ul>
  <li>
    <h4 id="research-about-block-composition">Research about Block Composition</h4>
    <p>The first step was to understand the issue created by David Tapiador. I researched the data flow of opening prebuilt VC projects, adding as a block, and the build options. When the project is built, the dependency section includes package and design key-value pairs. The dependencies were not included, which may be the reason for this nested issue.</p>
  </li>
  <li>
    <h4 id="adding-interdependencies">Adding interdependencies</h4>
    <p>For nested blocks, I modified the Dependency interface to include the interdependencies element. I also modified the package-model and converter for dependencies. Successfully, interdependencies appeared inside dependencies, but they were blank. This blank state is a great checkpoint as modifying internal structures introduced many errors. I am happy with the progress of this blank interdependencies issue.</p>
  </li>
</ul>

<p>Integreation of interdependencies inside dependencies:</p>

<p><img src="../assets/images/three.png" alt="" />
<img src="../assets/images/four.png" alt="" /></p>

<h2 id="commits">Commits</h2>
<ol>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/commit/7ccbea013a311fe1d0af6e71408b84b3b7594f15">https://github.com/JdeRobot/VisualCircuit/commit/7ccbea013a311fe1d0af6e71408b84b3b7594f15</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/commit/8ea1c0d35e1ee11f282a7407635ff899c538f34f">https://github.com/JdeRobot/VisualCircuit/commit/8ea1c0d35e1ee11f282a7407635ff899c538f34f</a></li>
</ol>

<h2 id="previous-pr-updates">Previous PR Updates</h2>
<ol>
  <li>Merged - <a href="https://github.com/JdeRobot/VisualCircuit/pull/309">https://github.com/JdeRobot/VisualCircuit/pull/309</a></li>
</ol>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[Welcome to the second week of Coding Week progress. In the Monday meeting, we discussed the minimum tasks required for the midterm evaluation, reviewed the previous tasks, and assigned tasks for the next week. One of the issues in VisualCircuit is that it doesn’t generate internal scripts for nested blocks. This issue prevents the creation of complex robotics applications. To address this, I will be modifying the block composition this week. Additionally, I created a basic frontend test and installation process within GitHub Actions. This week, I will work on the first global test with GitHub Actions.]]></summary></entry><entry><title type="html">Coding Period Week 3: June 11 ~ June 17</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week3/" rel="alternate" type="text/html" title="Coding Period Week 3: June 11 ~ June 17" /><published>2024-06-10T00:00:00+05:30</published><updated>2024-06-10T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/code-w3</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week3/"><![CDATA[<p>On the 10th of June, during Monday’s meeting, Dr. JoseMaria explained the Global Input Output issue. Whenever the user creates a Robotics Application circuit, if it needs to generate a block, the user needs to modify the circuit, which is very time-consuming. Therefore, we need to implement the functionality for generating both the block and the circuit without modifying the circuit. This functionality will improve user performance on VC. Additionally, the tasks from the previous week were only partially completed, so they have been reassigned for this week.</p>
<h2 id="goals">Goals</h2>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Modification of VC block compostion for Global Input Output [In Progress]</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Create first global test workflow [In Progress]</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Solve the issue of nested block [In Progress]</li>
</ul>

<h2 id="accomplishment-and-challenges">Accomplishment and Challenges</h2>

<ul>
  <li>
    <h4 id="understanding-the-vc-block-composition">Understanding the VC Block Composition</h4>
    <p>I went through some frontend files such as <code class="language-plaintext highlighter-rouge">menu/index.tsx</code>, <code class="language-plaintext highlighter-rouge">project-info-dialog.tsx</code>, and <code class="language-plaintext highlighter-rouge">editor.ts</code>. These files are responsible for editing the project information on the frontend side. Initially, I thought of adding Global Input Output functionality within the existing project editing interface. However, as I began implementing it, I realized that it was more difficult than anticipated since it required changing the Project Info interface in every file. Therefore, I decided to build a new dialog box that can be opened from the “Save Block” option in the menu bar.</p>
  </li>
  <li>
    <h4 id="implementation-of-global-input-output-on-frontend">Implementation of Global Input Output on frontend</h4>
    <p>For choosing the Global Input Output, all inputs and outputs can be shown, and from there, the Global Input Output can be assigned. I created a new script for the dialog box and modified <code class="language-plaintext highlighter-rouge">editor.ts</code> and <code class="language-plaintext highlighter-rouge">menu/index.tsx</code>. Currently, all inputs and outputs are displayed. Next week, I will work on assigning the inputs and outputs as Global for the block.</p>
  </li>
</ul>

<p>Checkbox for global input output - dialog box:</p>

<p><img src="../assets/images/five.png" alt="" /></p>

<ul>
  <li>
    <h4 id="solving-the-nested-block-with-different-approach">Solving the nested block with different approach</h4>
    <p>In this approach, I didn’t use <code class="language-plaintext highlighter-rouge">node.dependencies</code> but instead created blocks and wires for internal dependencies. This solution was suggested by ChatGPT, so I tried it. It involved creating internal wires for dependencies and making the linkages. I spent around two days on this, but it didn’t yield the desired results. Additionally, it was suggesting editing many internal components, so I dropped this idea and returned to my nested block solution.</p>
  </li>
  <li>
    <h4 id="solving-the-nested-block-with-last-week-approach">Solving the nested block with last week approach</h4>
    <p>In the previous week, I encountered blank dependencies. I noticed that the interface dependencies contained a single dependency, so I modified it to include an array and used recursive calls to add internal dependencies. Additionally, <code class="language-plaintext highlighter-rouge">factory.tsx</code> had not been changed, so I modified that as well. However, the issue of blank dependencies still persists. I need to consult the mentors regarding this issue, as I feel it can be resolved with some more effort.</p>
  </li>
</ul>

<h2 id="previous-pr-updates">Previous PR Updates</h2>
<ol>
  <li>Merged - <a href="https://github.com/JdeRobot/VisualCircuit-resources/pull/12">https://github.com/JdeRobot/VisualCircuit-resources/pull/12</a></li>
</ol>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[On the 10th of June, during Monday’s meeting, Dr. JoseMaria explained the Global Input Output issue. Whenever the user creates a Robotics Application circuit, if it needs to generate a block, the user needs to modify the circuit, which is very time-consuming. Therefore, we need to implement the functionality for generating both the block and the circuit without modifying the circuit. This functionality will improve user performance on VC. Additionally, the tasks from the previous week were only partially completed, so they have been reassigned for this week. Goals Modification of VC block compostion for Global Input Output [In Progress] Create first global test workflow [In Progress] Solve the issue of nested block [In Progress]]]></summary></entry><entry><title type="html">Coding Period Week 4: June 18 ~ June 24</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week4/" rel="alternate" type="text/html" title="Coding Period Week 4: June 18 ~ June 24" /><published>2024-06-10T00:00:00+05:30</published><updated>2024-06-10T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/code-w4</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week4/"><![CDATA[<p>In the fourth week’s Monday meeting, I showed a working demo and discussed the previous week’s tasks. The mentors suggested working on block composition for global input/output. The other nested issue is quite complex and needs more time, so this task is postponed to other week.</p>
<h2 id="goals">Goals</h2>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Complete the first Selenium-based global test</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Modification of VC block compostion for Global Input Output</li>
</ul>

<h2 id="accomplishment-and-challenges">Accomplishment and Challenges</h2>

<ul>
  <li>
    <h4 id="pasting-vc3-file-and-opening-the-file-in-vc">Pasting .vc3 file and opening the file in VC</h4>
    <p>I first tried putting the circuit file in the Selenium Docker container through a Python script, but it wasn’t a great solution, so I decided to put the circuit file through YAML using Docker commands. After solving this, I needed to open the file from a particular directory in the file manager dialog box. For this, OS-level control was needed, so I used the pyautogui library for opening the file in Visual Circuit.</p>
  </li>
  <li>
    <h4 id="building-and-solving-inseure-download-issue">Building and solving inseure download issue</h4>
    <p>There were many errors when building the project as the backend was running on localhost on the local machine and had to be accessed from the Docker container, resulting in fetch errors. These were resolved after modifying setting.py and .env. After that, the browser wasn’t allowing downloads as Chrome considered the HTTP frontend insecure. After some Googling and searching on StackOverflow, I found a solution. Finally, the whole process was completed automatically by Selenium. The complete process is shown in the GIF below.
Selenium based first automated global test:</p>
  </li>
</ul>

<p><img src="../assets/images/six.gif" alt="" /></p>

<ul>
  <li>
    <h4 id="improving-fetch-global-input-and-output-function">Improving fetch Global Input and Output function</h4>
    <p>In the previous week, I was able to fetch the port data from all blocks, but it was using more iterations and not proper internal functions for fetching the data. So I improved the global input/output function and also added the submit and checklist handlers to pass data to other scripts.</p>
  </li>
  <li>
    <h4 id="creating-input-output-blocks-automatically-from-checkbox-data">Creating input output blocks automatically from checkbox data</h4>
    <p>Depending on the port chosen by the user, the particular global input/output block is generated automatically. It checks the port type, and according to that, the input or output block is generated with the same name. Initially, the global input/output block position is the same as the initial position, and the links are null.</p>
  </li>
  <li>
    <h4 id="modification-of-links-and-creating-respective-input-output-block">Modification of Links and creating respective input output block</h4>
    <p>I researched the internal structure of the model and tried to access the links and respective link IDs of each block. After this, I wrote down all possible cases for creating a circuit by the user. One case is where the global input/output has zero links, so one link has to be created, and the source and target assigned. Another case is that there is already a link connected with the block, so according to the port type, the particular source or target has to be removed and a new one assigned. Apart from that, there are other cases that need to be tested in the future, such as if there are two links at the same port, which one to choose. I want to ask the mentors about these cases.</p>
  </li>
  <li>
    <h4 id="saving-and-retriving-old-blocks-function">Saving and retriving old blocks function</h4>
    <p>Before generating the .vc3 composed block file, the old model has to be saved so the user can continue working on the circuit without worrying about the blocks global input/output. The model and project info are saved in the stack, and whenever the build is completed, the old model is loaded. There were constant errors, such as storing the data in the stack but it was changing with changes, as I was storing this.activModel directly in the stack, causing changes in the stack. For that, I tried several methods using deepCopy, custom functions, and cloneDeep. Both deepCopy and custom functions didn’t work, so I used the cloneDeep library, which worked without any errors. Similar to the “Save as” functionality, I used that part of the code for generating .vc3 file.</p>
  </li>
</ul>

<p>Normal circuit to be converted for block:
<img src="../assets/images/eight.png" alt="" /></p>

<p>Global input ouput port selection :
<img src="../assets/images/nine.png" alt="" /></p>

<p>Generated block:
<img src="../assets/images/seven.png" alt="" /></p>

<p>Internal block structure:
<img src="../assets/images/ten.png" alt="" /></p>

<h2 id="commits">Commits</h2>
<ol>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/commit/f9bd5007fa83a4ee2503e1780006a425c1994372">https://github.com/JdeRobot/VisualCircuit/commit/f9bd5007fa83a4ee2503e1780006a425c1994372</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/commit/51c82737938e5370e1e3047b5ee9d9bdeb117940">https://github.com/JdeRobot/VisualCircuit/commit/51c82737938e5370e1e3047b5ee9d9bdeb117940</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/commit/0d3759b154f110318e6b6b7e29fa61012262238a">https://github.com/JdeRobot/VisualCircuit/commit/0d3759b154f110318e6b6b7e29fa61012262238a</a></li>
</ol>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[In the fourth week’s Monday meeting, I showed a working demo and discussed the previous week’s tasks. The mentors suggested working on block composition for global input/output. The other nested issue is quite complex and needs more time, so this task is postponed to other week. Goals Complete the first Selenium-based global test Modification of VC block compostion for Global Input Output]]></summary></entry><entry><title type="html">Coding Period Week 1: May 27 ~ June 03</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week1/" rel="alternate" type="text/html" title="Coding Period Week 1: May 27 ~ June 03" /><published>2024-06-03T00:00:00+05:30</published><updated>2024-06-03T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/code-w1</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/coding-week1/"><![CDATA[<p>From here onwards Coding period begins, During the Monday meeting, mentors discussed the blocks in VisualCircuit resources and initial tests with GitHub Actions. Additionally, I had some doubts about the VC resources repository, which were clarified by the mentors.</p>

<h2 id="goals">Goals</h2>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Add basic test with Github Actions.</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Modify and add the blocks in VisualCircuit resources.</li>
</ul>

<h2 id="accomplishment-and-challenges">Accomplishment and Challenges</h2>

<ul>
  <li>
    <h4 id="first-yaml-file-for-github-actions">First yaml file for Github Actions</h4>
    <p>First of all, it was my first time writing a YAML file for GitHub Actions. I used resources such as YouTube videos [1] and GitHub Actions documentation [2]  to help me write the initial script. From the discussions, it was clear that testing should trigger when there is a pull request to the master branch, so I started with that and followed the VisualCircuit documentation for the frontend installation.</p>
  </li>
</ul>

<p>First failure of coding period:</p>

<p><img src="../assets/images/one.png" alt="one" /></p>

<ul>
  <li>
    <h4 id="creating-workflow-for-installation-process">Creating workflow for installation process</h4>
    <p>The initial idea was to create a separate workflow for the installation process. This installation workflow would be reused for every test and other workflows. I worked on this and resolved the above issue by including ‘–legacy-peer-deps’ at the end of the ‘npm install’ command.</p>
  </li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>name: Install and Build

on:
  pull_request:
    branches:
      - <span class="s1">'master'</span>

<span class="nb">jobs</span>:
  <span class="nb">install</span>:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: <span class="s1">'16'</span>

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: <span class="s1">'3.x'</span> 

      - name: Install NPM dependencies
        working-directory: frontend
        run: npm <span class="nb">install</span> <span class="nt">--legacy-peer-deps</span>

      - name: Create virtual environment
        run: python <span class="nt">-m</span> venv .venv

      - name: Activate virtual environment
        run: <span class="nb">source</span> .venv/bin/activate

      - name: Install dependencies
        run: |
          python <span class="nt">-m</span> pip <span class="nb">install</span> <span class="nt">--upgrade</span> pip
          pip <span class="nb">install</span> <span class="nt">-r</span> backend/requirements.txt
      - name: Add .env file
        run: <span class="nb">cp </span>backend/.env.template backend/.env

      - name: Generate static files
        run: python backend/manage.py collectstatic
</code></pre></div></div>
<ul>
  <li>
    <h4 id="research-and-modifying-the-workflow">Research and modifying the workflow</h4>
    <p>I reviewed some open source projects such as RocketChat and Volto by the Plone Foundation to understand the CI pipeline workflow. I realized that creating a separate workflow for installation is uncommon and not a best practice. Instead, I created a setup job and stored the results in artifacts for use in different tests (jobs).</p>
  </li>
</ul>

<p>Initially, I encountered a “MODULE NOT FOUND” frontend error because I stored node modules in artifacts. Storing node modules in artifacts is not ideal since artifacts are typically used for build files. Stack Overflow and GitHub Actions documentation [3] suggested using Action Cache instead. After switching to Action Cache, the issue was resolved, and I proceeded to the next step of basic frontend testing.</p>

<ul>
  <li>
    <h4 id="ci-workflow-with-basic-frontend-test">CI Workflow with basic frontend test</h4>
    <p>For basic frontend testing, I researched Jest and React testing frameworks commonly used for unit tests on the React side. I used prebuilt React tests and initially printed the rendered HTML in the terminal. Based on this, I identified the menubar elements and added a basic test to find and verify that the “File” text is present in the rendered App.</p>
  </li>
</ul>

<p>CI Workflow tested in forked repo:</p>

<p><img src="../assets/images/two.png" alt="two" /></p>

<h2 id="prs-created">PRs created</h2>
<ol>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/pull/306">https://github.com/JdeRobot/VisualCircuit/pull/306</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/pull/307">https://github.com/JdeRobot/VisualCircuit/pull/307</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/pull/308">https://github.com/JdeRobot/VisualCircuit/pull/308</a></li>
  <li><a href="https://github.com/JdeRobot/VisualCircuit/pull/309">https://github.com/JdeRobot/VisualCircuit/pull/309</a></li>
</ol>

<h2 id="resources">Resources</h2>
<ol>
  <li><a href="https://www.youtube.com/playlist?list=PL9ok7C7Yn9A-6uidd3RXZPf5EfhxkPXa_">https://www.youtube.com/playlist?list=PL9ok7C7Yn9A-6uidd3RXZPf5EfhxkPXa_</a></li>
  <li><a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions</a></li>
  <li><a href="https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows">https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows</a></li>
</ol>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[From here onwards Coding period begins, During the Monday meeting, mentors discussed the blocks in VisualCircuit resources and initial tests with GitHub Actions. Additionally, I had some doubts about the VC resources repository, which were clarified by the mentors.]]></summary></entry><entry><title type="html">Community Bonding Week 3</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week3/" rel="alternate" type="text/html" title="Community Bonding Week 3" /><published>2024-05-27T00:00:00+05:30</published><updated>2024-05-27T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/comm-w3</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week3/"><![CDATA[<p>In the last week of the community bonding period, a video showcasing the Autoparking exercise of RoboticsAcademy with VisualCircuit (ROS2 Humble) was released on the JdeRobot YouTube channel [1]. This was my first time having my work released and published on JdeRobot’s social media platforms [2] [3]. I observed an issue where the value remained the same in the internal constant of identical blocks. This issue occurred when I used multiple laser blocks in the project for the Autoparking exercise. Toshan verified this issue during a meeting on his system.</p>

<p>Dr. JoseMaria explained the internal workings of RADI and the Robotics Application Manager. He assigned me the task of researching and understanding RAM. Additionally, he suggested running the VisualCircuit robotics application directly from a zip file inside RADI, which will automatically unzip and run the main.py of VisualCircuit. Previously, I was copying the unzipped files to the Docker image, but with this new method, the directly built version will be used in the Docker image.</p>

<h2 id="work-done">Work Done</h2>
<ol>
  <li>Created an issue for the value remaining the same in the internal constant of identical blocks.</li>
  <li>Researched the architecture and functioning of the Robotics Application Manager.</li>
  <li>Ran the VisualCircuit robotics application by unzipping it inside the RA Docker image.</li>
</ol>

<h2 id="issues-created">Issues Created</h2>
<p><a href="https://github.com/JdeRobot/VisualCircuit/issues/305">https://github.com/JdeRobot/VisualCircuit/issues/305</a></p>

<h2 id="important-links">Important Links</h2>
<ol>
  <li><a href="https://youtu.be/SRSmFSIsZWQ?si=qu_DoqOhfxu3OkGi">https://youtu.be/SRSmFSIsZWQ?si=qu_DoqOhfxu3OkGi</a></li>
  <li><a href="https://twitter.com/JdeRobot/status/1793202648411230247">https://twitter.com/JdeRobot/status/1793202648411230247</a></li>
  <li><a href="https://www.linkedin.com/posts/jderobot_roboticsacademy-ros2-visualcircuit-activity-7198419498582859777-qLtj/">https://www.linkedin.com/posts/jderobot_roboticsacademy-ros2-visualcircuit-activity-7198419498582859777-qLtj/</a></li>
</ol>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[In the last week of the community bonding period, a video showcasing the Autoparking exercise of RoboticsAcademy with VisualCircuit (ROS2 Humble) was released on the JdeRobot YouTube channel [1]. This was my first time having my work released and published on JdeRobot’s social media platforms [2] [3]. I observed an issue where the value remained the same in the internal constant of identical blocks. This issue occurred when I used multiple laser blocks in the project for the Autoparking exercise. Toshan verified this issue during a meeting on his system.]]></summary></entry><entry><title type="html">Community Bonding Week 2</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week2/" rel="alternate" type="text/html" title="Community Bonding Week 2" /><published>2024-05-20T00:00:00+05:30</published><updated>2024-05-20T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/comm-w2</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week2/"><![CDATA[<p>In the second week of the community bonding period, there was an introductory meeting with the entire JdeRobot community. In the meeting, Pedro and Dr. JoseMaria introduced the workflow and team, and every GSoC 2024 student introduced themselves. Apart from this meeting, there was a meeting scheduled for May 13th, but due to rainy weather in the western part of India, there was no proper connectivity, so that meeting concluded through text on Slack. After two days, Toshan rescheduled the meeting, and the following tasks were assigned and completed.</p>

<h2 id="work-done">Work Done</h2>
<ol>
  <li>Made changes to the video, including adding subtitles and adjusting the speed of clips, as per the mentors’ suggestions.</li>
  <li>Learned about Releases in GitHub.</li>
  <li>Generated the JSON file for the Laser ROS1 Noetic block and created a PR accordingly.</li>
</ol>

<h2 id="prs-created">PRs Created</h2>
<p><a href="https://github.com/JdeRobot/VisualCircuit/pull/304">https://github.com/JdeRobot/VisualCircuit/pull/304</a></p>

<h2 id="media">Media</h2>

<p>First meeting with JdeRobot community screenshot:</p>

<!-- <img src="../assets/images/meettwo.jpg" width=50% height=50%> -->
<p><img src="../assets/images/meettwo.jpg" alt="Firstmeet" /></p>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[In the second week of the community bonding period, there was an introductory meeting with the entire JdeRobot community. In the meeting, Pedro and Dr. JoseMaria introduced the workflow and team, and every GSoC 2024 student introduced themselves. Apart from this meeting, there was a meeting scheduled for May 13th, but due to rainy weather in the western part of India, there was no proper connectivity, so that meeting concluded through text on Slack. After two days, Toshan rescheduled the meeting, and the following tasks were assigned and completed.]]></summary></entry><entry><title type="html">Community Bonding Week 1</title><link href="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week1/" rel="alternate" type="text/html" title="Community Bonding Week 1" /><published>2024-05-11T00:00:00+05:30</published><updated>2024-05-11T00:00:00+05:30</updated><id>http://localhost:4000/gsoc2024-Pankaj_Borade/comm-w1_2</id><content type="html" xml:base="http://localhost:4000/gsoc2024-Pankaj_Borade/community-bonding-week1/"><![CDATA[<p>Hello everyone,</p>

<p>As you landed on my first week of community bonding period progress so you will have some idea about myself. If not then My name is Pankaj Borade, and I am a final-year student at Sardar Vallabhbhai National Institute of Technology (SVNIT Surat), pursuing Electronics and Communication Engineering.</p>

<p>First of all, it was my dream from my first year to work in GSoC with a mixed robotics and software tech stack, and that dream came true on 1st May 2024. I would like to extend my sincere thanks to the entire JdeRobot community, especially Dr. JoseMaria and Toshan, and the other incredible open-source developers, for providing me with this opportunity.</p>

<p>Now let’s together start the GSoC 2024 blog. I will be working on VisualCircuit Block library project. Basically it includes automated testing with GitHub Actions, refining block composition, and much more in VisualCircuit.Additionally, there was the first GSoC meeting with mentors Dr. JoseMaria and Toshan on May 6th. I also joined the community group on Slack.</p>

<h2 id="work-done">Work Done</h2>
<ol>
  <li>Completed setup of RoboticsAcademy for ROS2 Humble</li>
  <li>Created Blog website</li>
  <li>Created video and completed Autoparking of RA through VisualCircuit using ROS2 blocks.</li>
</ol>

<h2 id="media">Media</h2>

<p>First meeting with mentors screenshot:</p>

<!-- <img src="../assets/images/meetone.jpg" width=50% height=50%> -->
<p><img src="../assets/images/meetone.jpg" alt="Firstmeet" /></p>]]></content><author><name>Pankaj Keshav Borade</name></author><category term="Blog" /><summary type="html"><![CDATA[Hello everyone,]]></summary></entry></feed>